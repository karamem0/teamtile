trigger:
  - develop
  - master

pr: none

pool:
  vmImage: windows-latest

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: BuildManifest
        displayName: Build Manifest
        variables:
          solutionDir: manifest
        steps:
          - task: ReplaceTokens@3
            displayName: Replace tokens
            inputs:
              rootDirectory: $(solutionDir)
              targetFiles: manifest.json
              encoding: utf-8
              writeBOM: false
              actionOnMissing: fail
              keepToken: false
              tokenPrefix: "{{"
              tokenSuffix: "}}"
          - task: ArchiveFiles@2
            displayName: Archive build files
            inputs:
              rootFolderOrFile: $(solutionDir)
              archiveFile: $(Build.ArtifactStagingDirectory)/manifest.zip
              includeRootFolder: false
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifacts
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: manifest
              publishLocation: Container
      - job: BuildServer
        displayName: Build Server
        variables:
          buildConfiguration: Release
          solutionDir: source/server
          solutionFile: Karamem0.Teamtile.csproj
        steps:
          - task: ReplaceTokens@3
            displayName: Replace tokens
            inputs:
              rootDirectory: $(solutionDir)
              targetFiles: appSettings.json
              encoding: utf-8
              writeBOM: false
              actionOnMissing: fail
              keepToken: false
              tokenPrefix: "{{"
              tokenSuffix: "}}"
          - task: DotNetCoreCLI@2
            displayName: Run dotnet restore
            inputs:
              command: restore
              projects: $(solutionDir)/$(solutionFile)
          - task: DotNetCoreCLI@2
            displayName: Run dotnet publish
            inputs:
              command: publish
              projects: $(solutionDir)/$(solutionFile)
              arguments: --configuration $(buildConfiguration) --output $(solutionDir)/publish
              publishWebProjects: true
              zipAfterPublish: false
          - task: ArchiveFiles@2
            displayName: Archive build files
            inputs:
              rootFolderOrFile: $(solutionDir)/publish/server
              archiveFile: $(Build.ArtifactStagingDirectory)/server.zip
              includeRootFolder: false
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifacts
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: server
              publishLocation: Container
      - job: BuildClient
        displayName: Build Client
        variables:
          solutionDir: source/client
        steps:
          - task: ReplaceTokens@3
            displayName: Replace tokens
            inputs:
              rootDirectory: $(solutionDir)
              targetFiles: .env
              encoding: utf-8
              writeBOM: false
              actionOnMissing: fail
              keepToken: false
              tokenPrefix: "{{"
              tokenSuffix: "}}"
          - task: NodeTool@0
            displayName: Install Node.js
            inputs:
              versionSpec: 10.x
          - task: Npm@1
            displayName: Run npm install
            inputs:
              command: install
              workingDir: $(solutionDir)
          - task: Npm@1
            displayName: Run npm run build
            inputs:
              command: custom
              customCommand: run build
              workingDir: $(solutionDir)
          - task: Npm@1
            displayName: Run npm run test
            inputs:
              command: custom
              customCommand: run test-ci
              workingDir: $(solutionDir)
          - task: CopyFiles@2
            displayName: Copy web.config
            inputs:
              SourceFolder: $(solutionDir)
              Contents: web.config
              TargetFolder: $(solutionDir)/build
          - task: ArchiveFiles@2
            displayName: Archive build files
            inputs:
              rootFolderOrFile: $(solutionDir)/build
              archiveFile: $(Build.ArtifactStagingDirectory)/client.zip
              includeRootFolder: false
          - task: PublishTestResults@2
            displayName: Publish test results
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: $(solutionDir)/junit.xml
          - task: PublishBuildArtifacts@1
            displayName: Publish build artifacts
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)
              artifactName: client
              publishLocation: Container
  - stage: Deploy
    displayName: Deploy
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: DeployServer
        displayName: Deploy Server
        steps:
          - checkout: none
          - task: DownloadBuildArtifacts@0
            displayName: Download build artifacts
            inputs:
              buildType: current
              downloadType: single
              artifactName: server
              downloadPath: $(System.ArtifactsDirectory)
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy server
            inputs:
              ConnectionType: AzureRM
              azureSubscription: Azure Resource Manager
              appType: webApp
              WebAppName: teamtile
              package: $(System.ArtifactsDirectory)/**/server.zip
              enableCustomDeployment: true
              deploymentType: webDeploy
              virtualApplication: /api
      - job: DeployClient
        displayName: Deploy Client
        steps:
          - checkout: none
          - task: DownloadBuildArtifacts@0
            displayName: Download build artifacts
            inputs:
              buildType: current
              downloadType: single
              artifactName: client
              downloadPath: $(System.ArtifactsDirectory)
          - task: AzureRmWebAppDeployment@4
            displayName: Deploy client
            inputs:
              ConnectionType: AzureRM
              azureSubscription: Azure Resource Manager
              appType: webApp
              WebAppName: teamtile
              package: $(System.ArtifactsDirectory)/**/client.zip
              enableCustomDeployment: true
              deploymentType: webDeploy
              virtualApplication: /
